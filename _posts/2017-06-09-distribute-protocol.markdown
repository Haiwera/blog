---
layout: post
title:  "分布式协议"
date:   2017-06-09 21:10:35 +0800
tags: protocol distribute
categories: 读书总结
---
 如今分布式系统已经成为各互联网巨头的基石了，对于日益庞大的数据存储以及由它们带来的巨大的计算，都不是单机所能完成的任务。那么对于庞大的分布式系统，分布式协议就是协调集群中各节点工作的准则

<!--break-->

**对于任意分布式系统，容错能力是其设计中必须考虑的问题，任意节点故障不能影响整体对外提供的服务，为保证这一点，集群中的节点都是有备用节点的,对于分布式存储系统而言为保证数据不会因为故障而丢失，通常一份数据会有多个副本分散在集群的各个节点上**

## lease租约协议

租约协议提供主控节点发现故障节点的一种机制，主控节点以租约的形式将权限发放给受控节点，受控节点在租约期内对外提供服务，否则即使自身是健康的也要主动停止服务。受控节点在基能正常服务的情况下不断向主控节点申请延长租约。当节点出现故障时或网络异常时，租约过期之前主节点仍认为该节点是正常的，主节点必须等待其租约过期方可启动备用节点。在故障到启用备用节点这段时间内，服务不可用。

例如Google GFS的写服务，为保证数据一致性，同一时间对同一数据块的写操作权限被以租约形式发放给其中某一个副本，而其它副本只提供读服务。

## Paxos分布式一致性协议

* Paxos 协议目的是为了解决多节点数据一致性的问题，用于各节点就某个值达成一致，：它可以用于保证多节点数据的一致性。在各大分布式系统有着广泛应用，如Google的 Chubby分布式锁服务、Bigtable分布式表格系统，Zookeeper等。

* Paxos协议分三个阶段,其节点有两种角色，Proposer和Acceptor，proposer是提议者，Acceptor是接受者，一个节点可以同时拥有两种角色，也可以是单独的一种角色。

#### 准备阶段 

提议者准备一个提议号，发送给所有接受者。接受者接受或拒绝该提议。提议者超过半数接受者的回复便进入批准阶段。接受者按以下规则响应提议者请求：若自身没有收到过其它提议者提议，直接回复接受并记录该提议者的提议号。若之前有授受其它提议号，比较是否大于当前提议号。大于则回复之前接受的提议号并记录当前提议号。否则不回复。

#### 批准阶段

提议者收到半数以上的接受者回复立即进入批准阶段。若回复中全部是接受响应，进入确认阶段，否则回复中有其它提议号，提议者将选取其中最大的重新交由所有接受者回复。

#### 确认阶段

提议者收到超一半的接受响应进入确认阶段，进入确认阶段的提议者成为新的主节点，发送确认消息到其它所有节点告知。


## 2PC分布式事务协议(两段提交协议)

* 两阶段提交协议保证一个事务原子执行。即要么全部成功，要么全部失败。协议要求集群中有协调者角色，负责协调事务。顾名思意，事务被分为两个阶段。

#### 第一阶段

协调者到事务并为其分配一个事务唯一id并通知所有事务参与节点记录日志(REDO或UNDO日志)并等待回复。参与者收到请求后开始写日志。写入成功后返回告知协调者
	
#### 第二阶段

协调者收到所有参与者的成功返回消息，发送确认消息通知所有参与者应用事务，参与者收到该消息后各自应用日志并返回执行结果。若超时未收到或某节点失败，协调者通知所有参与者事务失败。

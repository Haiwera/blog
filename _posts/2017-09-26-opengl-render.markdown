---
layout: post
title:  "OPENGL 渲染管线"
date:   2017-09-26 21:12:01 +0800
tags: docker jenkins php
categories: 读书总结
---

OPENGL是图形硬件的一种软件接口，是计算机3D呈像较为流行的一种技术。它隐藏了图形呈现中许多复杂计算的细节，提供了与现实世界相通的一些概念来操作基中的元素。

<!--break-->

OPENGL 更像是一个状态机，它维护了许多与当前环境相关的状态信息。我们可以设置它，在这之后。只要不进行更改，它便一值是这个状态。比如当前绘图的颜色信息、绘图模式、光照信息、纹理等等。

OPENGL会使用一系列操作，将绘制的数据渲染成一个复杂的三维场景，这个流程被称为渲染管线。

OPEN的渲染管线被分为两个部分，顶点数据和像素数据，它们一开始分别进行处理，然后经进光栅化、片段操作后进入频缓冲区。

## OPENGL基础模型绘制

对于三维世界的物体，OPENGL中以一系列的数组来描述。基中包含顶点数组，颜色数组、法线向量数组、雾数组、纹理数组、起点边数组。OPENGL提供了对这些数据统一管理的方式，可以将它们装进一个数组，用跨距的形式取对应的数据。

### 基础状态设置

对于设置好的顶点数据，在绘制之前要设置绘制模式，使用不同的模式，绘制出的模型可能完全不同。如：指定了以三角面模式绘制，则绘制出来的是三角面的模型。当然还可以选择四角面，甚至可以选择多边形模式将所有点连成一个多边型。


### 顶点数组

OPENGL使用欧几里得空间表描述顶点数据，每个顶点被表示为(x,y,z,w) w默认为1。

### 缓冲区对像

OPENGL运行方式是一种客户端，服务器模式。负责绘图的可以理解成是一个客户端。服务器发送绘图指令给客户端，经OPENGL计算后渲染出来。在大多数情况下，数据存放在服务器上，在被使用时才被复制到客户端。这是很影响效率的，缓冲区对像就很好的解决了这一问题。


## 视图变换及模型变换

OPENGL

## 投影及视口变换

## 颜色与光照

我们在进行场影绘制时，首先要将顶点数据
